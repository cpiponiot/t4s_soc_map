```{r setup}
#| message: false
#| warning: false

library(terra)
library(tidyverse)
library(ggcorrplot)
library(ggfortify)
```

## Climate data {.unnumbered}

The climate data was retrieved from [Climatologies at high resolution for the earth's land surface areas (CHELSA)](https://chelsa-climate.org/).

```{r download-chelsa}
# function to download and crop CHELSA data
dl_chelsa <- function(
    file,
    dir_chelsa,
    dir_local = "CHELSA",
    box = NULL
) {
  url <- paste(
    "https://os.zhdk.cloud.switch.ch/chelsav2/GLOBAL",
    dir_chelsa, file,
    sep = "/"
  )
  destfile <- paste(dir_local, file, sep = "/")
  # download raster from url (if it doesn't already exist in the folder)
  if (!file.exists(destfile)) {
    utils::download.file(url, destfile, method = "curl")
    ## crop to reduce memory usage
    if (!is.null(box)) {
      destfile |> 
        terra::rast() |> 
        terra::crop(terra::ext(box)) |> 
        terra::writeRaster(file = destfile, overwrite = TRUE) 
    }
  }
}

if (! dir.exists("data/download/CHELSA")) dir.create("data/download/CHELSA")
for (i in 1:19) {
  dl_chelsa(file = paste0("CHELSA_bio", i, "_1981-2010_V.2.1.tif"), 
            dir_chelsa = "climatologies/1981-2010/bio", 
            dir_local = "data/download/CHELSA",
            box = c(-9, -2, 4, 11))
}
```

The values of all Bioclimatic variables are then extracted at the location of all terri4sol plots.

```{r extract-chelsa}
# extract values for all t4s plots
data_stocks <- read.csv("data/cache/data_stocks.csv")

climate_data <- 
  list.files("data/download/CHELSA", pattern = "tif$", full.names = TRUE) |> 
  rast() |> 
  terra::extract(data_stocks[, c("lon", "lat")]) |> 
  rename_with( ~ gsub(pattern = "CHELSA_|_1981-2010_V.2.1", replacement = "", x = .x)) |> 
  select(contains("bio")) |> 
  bind_cols(data_stocks[, c("site", "plot")]) |> 
  relocate(site, plot)

write.csv(climate_data, file = "data/cache/climate_data.csv", row.names = FALSE)
```

The following plots have NAs in at least one Bioclim variable.

```{r}
climate_data |> 
  filter(if_any(contains("bio"), is.na)) |> 
  relocate(site, plot)
```

Below is the result of a Principal Component Analysis with all bioclimatic variables.

```{r}
data_pca <- climate_data |> 
  filter(!if_any(everything(), is.na)) 

data_pca |> 
  select(contains("bio")) |> 
  prcomp(scale = TRUE) |> 
  autoplot(loadings = TRUE, loadings.label = TRUE, 
           data = data_pca, colour = "site") +
  theme_minimal()
```

We can also plot the pairwise correlation of all climate variables.

```{r}
climate_data |> 
  select(contains("bio")) |> 
  cor() |> 
  ggcorrplot()
```
