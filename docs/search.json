[
  {
    "objectID": "11_general_framework.html",
    "href": "11_general_framework.html",
    "title": "General framework",
    "section": "",
    "text": "Context and motivation",
    "crumbs": [
      "General framework"
    ]
  },
  {
    "objectID": "11_general_framework.html#research-questions",
    "href": "11_general_framework.html#research-questions",
    "title": "General framework",
    "section": "Research questions",
    "text": "Research questions",
    "crumbs": [
      "General framework"
    ]
  },
  {
    "objectID": "11_general_framework.html#methodological-approach",
    "href": "11_general_framework.html#methodological-approach",
    "title": "General framework",
    "section": "Methodological approach",
    "text": "Methodological approach",
    "crumbs": [
      "General framework"
    ]
  },
  {
    "objectID": "21_soil_data.html",
    "href": "21_soil_data.html",
    "title": "Soil dataset",
    "section": "",
    "text": "Site location\nCode\nmap_data(\"world\") |&gt; \n  subset(region == \"Ivory Coast\") |&gt; \n  ggplot() +\n  geom_polygon(aes(x=long, y = lat), fill = \"white\") + \n  geom_point(data = data_soil, aes(lon, lat, col = site)) +\n  theme(axis.title = element_blank()) +\n  coord_equal()",
    "crumbs": [
      "Soil dataset"
    ]
  },
  {
    "objectID": "21_soil_data.html#site-location",
    "href": "21_soil_data.html#site-location",
    "title": "Soil dataset",
    "section": "Site location",
    "text": "Site location\n\n\nCode\nmap_data(\"world\") |&gt; \n  subset(region == \"Ivory Coast\") |&gt; \n  ggplot() +\n  geom_polygon(aes(x=long, y = lat), fill = \"white\") + \n  geom_point(data = data_soil, aes(lon, lat, col = site)) +\n  theme(axis.title = element_blank()) +\n  coord_equal()",
    "crumbs": [
      "Soil dataset"
    ]
  },
  {
    "objectID": "21_soil_data.html#distribution-of-soil-organic-carbon-stocks",
    "href": "21_soil_data.html#distribution-of-soil-organic-carbon-stocks",
    "title": "Soil dataset",
    "section": "Distribution of soil organic carbon stocks",
    "text": "Distribution of soil organic carbon stocks\n\n\nCode\ndata_soil |&gt; \n  ggplot(aes(x = T_stock)) + \n  geom_histogram() +\n  labs(x = expression(\"Soil organic carbon stocks [ Mg.\"*ha^-1*\" ]\")) +\n  theme_classic()\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 2 rows containing non-finite outside the scale range\n(`stat_bin()`).",
    "crumbs": [
      "Soil dataset"
    ]
  },
  {
    "objectID": "21_soil_data.html#dataset-size",
    "href": "21_soil_data.html#dataset-size",
    "title": "Soil dataset",
    "section": "Dataset size",
    "text": "Dataset size\n\n\nCode\ndata_soil |&gt; \n  group_by(site) |&gt; \n  summarise(n = n()) |&gt; \n  kable(col.names = c(\"Site\", \"Number of plots\"))\n\n\n\n\n\nSite\nNumber of plots\n\n\n\n\nAnguededou\n1\n\n\nadzope\n17\n\n\nagbo\n18\n\n\nagnibilekrou\n16\n\n\nazaguie\n16\n\n\nbadenou\n17\n\n\nbehiri\n87\n\n\nbiankouma\n16\n\n\nble\n15\n\n\nbonon\n16\n\n\nfoumbou\n17\n\n\nfresco\n16\n\n\ngrand_bereby\n16\n\n\ngueyo\n16\n\n\nguiberoua\n16\n\n\nguiglo\n16\n\n\nht_sassandra\n17\n\n\nirobo\n17\n\n\nmafere\n16\n\n\nmeagui\n16\n\n\nmebifon\n47\n\n\nniegre\n17\n\n\nsan_pedro\n16\n\n\nsoubre\n16\n\n\ntene\n17\n\n\nyaya\n17\n\n\n\n\n\nCode\ndata_soil |&gt; \n  subset(!is.na(present_landuse)) |&gt; \n  group_by(present_landuse) |&gt; \n  summarise(n = n()) |&gt; \n  kable(col.names = c(\"Landuse\", \"Number of plots\"))\n\n\n\n\n\nLanduse\nNumber of plots\n\n\n\n\ncassava\n45\n\n\ncocoa\n211\n\n\nfallow\n184\n\n\nfood_crop\n16\n\n\nforest\n9\n\n\nforetanc\n8\n\n\njvc\n16\n\n\npalm\n8\n\n\nplantation\n1\n\n\nrubber\n12",
    "crumbs": [
      "Soil dataset"
    ]
  },
  {
    "objectID": "31_climate.html",
    "href": "31_climate.html",
    "title": "Climate data",
    "section": "",
    "text": "Code\nlibrary(terra)\nlibrary(tidyverse)\nlibrary(ggcorrplot)\nlibrary(ggfortify)\n\n\nThe climate data was retrieved from Climatologies at high resolution for the earth’s land surface areas (CHELSA).\n\n\nCode\n# function to download and crop CHELSA data\ndl_chelsa &lt;- function(\n    file,\n    dir_chelsa,\n    dir_local = \"CHELSA\",\n    box = NULL\n) {\n  url &lt;- paste(\n    \"https://os.zhdk.cloud.switch.ch/chelsav2/GLOBAL\",\n    dir_chelsa, file,\n    sep = \"/\"\n  )\n  destfile &lt;- paste(dir_local, file, sep = \"/\")\n  # download raster from url (if it doesn't already exist in the folder)\n  if (!file.exists(destfile)) {\n    utils::download.file(url, destfile, method = \"curl\")\n    ## crop to reduce memory usage\n    if (!is.null(box)) {\n      destfile |&gt; \n        terra::rast() |&gt; \n        terra::crop(terra::ext(box)) |&gt; \n        terra::writeRaster(file = destfile, overwrite = TRUE) \n    }\n  }\n}\n\nif (! dir.exists(\"data/download/CHELSA\")) dir.create(\"data/download/CHELSA\")\nfor (i in 1:19) {\n  dl_chelsa(file = paste0(\"CHELSA_bio\", i, \"_1981-2010_V.2.1.tif\"), \n            dir_chelsa = \"climatologies/1981-2010/bio\", \n            dir_local = \"data/download/CHELSA\",\n            box = c(-9, -2, 4, 11))\n}\n\n\nThe values of all Bioclimatic variables are then extracted at the location of all terri4sol plots.\n\n\nCode\n# extract values for all t4s plots\ndata_stocks &lt;- read.csv(\"data/cache/data_stocks.csv\")\n\nclimate_data &lt;- \n  list.files(\"data/download/CHELSA\", pattern = \"tif$\", full.names = TRUE) |&gt; \n  rast() |&gt; \n  terra::extract(data_stocks[, c(\"lon\", \"lat\")]) |&gt; \n  rename_with( ~ gsub(pattern = \"CHELSA_|_1981-2010_V.2.1\", replacement = \"\", x = .x)) |&gt; \n  select(contains(\"bio\")) |&gt; \n  bind_cols(data_stocks[, c(\"site\", \"plot\")]) |&gt; \n  relocate(site, plot)\n\nwrite.csv(climate_data, file = \"data/cache/climate_data.csv\", row.names = FALSE)\n\n\nThe following plots have NAs in at least one Bioclim variable.\n\n\nCode\nclimate_data |&gt; \n  filter(if_any(contains(\"bio\"), is.na)) |&gt; \n  relocate(site, plot)\n\n\n        site plot bio1 bio10 bio11 bio12 bio13 bio14 bio15 bio16 bio17 bio18\n1    adzopeN   15   NA    NA    NA    NA    NA    NA    NA    NA    NA    NA\n2    adzopeN   21   NA    NA    NA    NA    NA    NA    NA    NA    NA    NA\n3    adzopeN   29   NA    NA    NA    NA    NA    NA    NA    NA    NA    NA\n4    adzopeN   48   NA    NA    NA    NA    NA    NA    NA    NA    NA    NA\n5    adzopeN   49   NA    NA    NA    NA    NA    NA    NA    NA    NA    NA\n6    adzopeN   50   NA    NA    NA    NA    NA    NA    NA    NA    NA    NA\n7    adzopeN   51   NA    NA    NA    NA    NA    NA    NA    NA    NA    NA\n8    adzopeN   68   NA    NA    NA    NA    NA    NA    NA    NA    NA    NA\n9    adzopeN   74   NA    NA    NA    NA    NA    NA    NA    NA    NA    NA\n10 tene_oume    8   NA    NA    NA    NA    NA    NA    NA    NA    NA    NA\n   bio19 bio2 bio3 bio4 bio5 bio6 bio7 bio8 bio9\n1     NA   NA   NA   NA   NA   NA   NA   NA   NA\n2     NA   NA   NA   NA   NA   NA   NA   NA   NA\n3     NA   NA   NA   NA   NA   NA   NA   NA   NA\n4     NA   NA   NA   NA   NA   NA   NA   NA   NA\n5     NA   NA   NA   NA   NA   NA   NA   NA   NA\n6     NA   NA   NA   NA   NA   NA   NA   NA   NA\n7     NA   NA   NA   NA   NA   NA   NA   NA   NA\n8     NA   NA   NA   NA   NA   NA   NA   NA   NA\n9     NA   NA   NA   NA   NA   NA   NA   NA   NA\n10    NA   NA   NA   NA   NA   NA   NA   NA   NA\n\n\nBelow is the result of a Principal Component Analysis with all bioclimatic variables.\n\n\nCode\ndata_pca &lt;- climate_data |&gt; \n  filter(!if_any(everything(), is.na)) \n\ndata_pca |&gt; \n  select(contains(\"bio\")) |&gt; \n  prcomp(scale = TRUE) |&gt; \n  autoplot(loadings = TRUE, loadings.label = TRUE, \n           data = data_pca, colour = \"site\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nWe can also plot the pairwise correlation of all climate variables.\n\n\nCode\nclimate_data |&gt; \n  select(contains(\"bio\")) |&gt; \n  drop_na() |&gt; \n  cor() |&gt; \n  ggcorrplot()",
    "crumbs": [
      "Ancillary data",
      "Climate data"
    ]
  },
  {
    "objectID": "32_soilgrids.html",
    "href": "32_soilgrids.html",
    "title": "Soilgrids data",
    "section": "",
    "text": "Code\nlibrary(terra)\nlibrary(gdalUtilities)\nlibrary(tidyverse)\nlibrary(ggcorrplot)\nlibrary(ggfortify)\n\n\nThe Soilgrids data was retrieved from the ISRIC website, using SoilGrids 2.0 (Poggio et al. 2021). Variables codes are described here.\n\n\nCode\n# function to download and crop CHELSA data\ndl_soilgrids &lt;- function(\n    var = \"cec\",\n    depth = \"0-5cm\", \n    stat = \"mean\", \n    dir_local = \"data/download/ISRIC\",\n    box = c(-9, -2, 4, 11)\n) {\n  \n  # project bounding box into IGH\n  ext_vect &lt;- terra::as.polygons(terra::ext(box), crs = \"EPSG:4326\")\n  igh &lt;- '+proj=igh +lat_0=0 +lon_0=0 +datum=WGS84 +units=m +no_defs'\n  ext_igh &lt;- terra::ext(terra::project(ext_vect, igh))\n  bb &lt;- c(ext_igh$xmin, ext_igh$ymax, ext_igh$xmax, ext_igh$ymin)\n  \n  # create url and file name\n  sg_url &lt;- \"/vsicurl/https://files.isric.org/soilgrids/latest/data/\"\n  datos &lt;- paste0(var, \"/\", var, \"_\", depth, \"_\", stat, \".vrt\")\n  file &lt;- paste0(\"data/download/ISRIC/\", var, \"_\", depth, \"_\", stat, \".tif\")\n  \n  # download from ISRIC site\n  if (!file.exists(file)) {\n    gdalUtilities::gdal_translate(\n      paste0(sg_url,datos), \n      file ,\n      tr=c(250,250),\n      projwin=bb,\n      projwin_srs =igh\n    )\n  }\n}\n\nif (! dir.exists(\"data/download/ISRIC\")) dir.create(\"data/download/ISRIC\")\n\nfor (v in c(\"bdod\", \"cec\", \"cfvo\", \"clay\", \"nitrogen\", \"phh2o\", \"sand\", \"silt\")) {\n  dl_soilgrids(\n    var = v,\n    depth = \"0-5cm\", \n    stat = \"mean\", \n    dir_local = \"data/download/ISRIC\",\n    box = c(-9, -2, 4, 11)\n  )\n}\n\n\nThe values of SoilGrids variables (for now, at 0-5 cm depth) are then extracted at the location of all terri4sol plots.\n\n\nCode\n# extract values for all t4s plots\ndata_stocks &lt;- read.csv(\"data/cache/data_stocks.csv\")\n\nsoilgrids_data &lt;- \n  list.files(\"data/download/ISRIC\", pattern = \"tif$\", full.names = TRUE) |&gt; \n  rast() |&gt; \n  project(\"EPSG: 4326\") |&gt; \n  terra::extract(data_stocks[, c(\"lon\", \"lat\")]) |&gt; \n  rename_with( ~ gsub(pattern = \"_mean\", replacement = \"\", x = .x)) |&gt; \n  select(contains(\"cm\")) |&gt; \n  bind_cols(data_stocks[, c(\"site\", \"plot\")])|&gt; \n  relocate(site, plot)\n\nwrite.csv(soilgrids_data, file = \"data/cache/soilgrids_data.csv\", row.names = FALSE)\n\n\nThe following plots have NAs in at least one Soilgrids variable.\n\n\nCode\nsoilgrids_data |&gt; \n  filter(if_any(contains(\"cm\"), is.na)) |&gt; \n  relocate(site, plot)\n\n\n           site plot bdod_0-5cm cec_0-5cm cfvo_0-5cm clay_0-5cm nitrogen_0-5cm\n1       adzopeN   15         NA        NA         NA         NA             NA\n2       adzopeN   21         NA        NA         NA         NA             NA\n3       adzopeN   29         NA        NA         NA         NA             NA\n4       adzopeN   48         NA        NA         NA         NA             NA\n5       adzopeN   49         NA        NA         NA         NA             NA\n6       adzopeN   50         NA        NA         NA         NA             NA\n7       adzopeN   51         NA        NA         NA         NA             NA\n8       adzopeN   68         NA        NA         NA         NA             NA\n9       adzopeN   74         NA        NA         NA         NA             NA\n10 agnibilekrou   12         NA  222.4667   222.3977   197.9799       338.7231\n11 agnibilekrou   13         NA  222.4667   222.3977   197.9799       338.7231\n12 agnibilekrou   14         NA  262.8052   219.2761   198.1559       380.7717\n13 agnibilekrou    3         NA  219.7961   212.8130   211.8463       370.8293\n14        bonon   14         NA        NA         NA         NA             NA\n15    tene_oume    8         NA        NA         NA         NA             NA\n   phh2o_0-5cm sand_0-5cm silt_0-5cm\n1           NA         NA         NA\n2           NA         NA         NA\n3           NA         NA         NA\n4           NA         NA         NA\n5           NA         NA         NA\n6           NA         NA         NA\n7           NA         NA         NA\n8           NA         NA         NA\n9           NA         NA         NA\n10    59.26054   513.8930   287.4169\n11    59.26054   513.8930   287.4169\n12    59.34255   486.8322   315.0118\n13    59.19337   515.0866   273.8551\n14          NA         NA         NA\n15          NA         NA         NA\n\n\nBelow is the result of a Principal Component Analysis with all Soilgrids variables.\n\n\nCode\ndata_pca &lt;- soilgrids_data |&gt; \n  filter(!if_any(everything(), is.na)) \n\ndata_pca |&gt; \n  select(contains(\"cm\")) |&gt; \n  prcomp(scale = TRUE) |&gt; \n  autoplot(loadings = TRUE, loadings.label = TRUE, \n           data = data_pca, colour = \"site\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nWe can also plot the pairwise correlation of all Soilgrids variables.\n\n\nCode\nsoilgrids_data |&gt;  \n  select(contains(\"cm\")) |&gt; \n  filter(!if_any(everything(), is.na)) |&gt; \n  cor() |&gt; \n  ggcorrplot()\n\n\n\n\n\n\n\n\n\n\n\n\n\nPoggio, Laura, Luis M. de Sousa, Niels H. Batjes, Gerard B. M. Heuvelink, Bas Kempen, Eloi Ribeiro, and David Rossiter. 2021. “SoilGrids 2.0: producing soil information for the globe with quantified spatial uncertainty.” SOIL 7 (1): 217–40. https://doi.org/10.5194/soil-7-217-2021.",
    "crumbs": [
      "Ancillary data",
      "Soilgrids data"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Soil Organic Carbon map of Cote d’Ivoire",
    "section": "",
    "text": "Introduction\nt4_soc_map is part of the terri4sol project.\nAll t4_soc_map analyses rely on the quarto documents (files.qmd) that can be run with R and associated environment defined with renv.",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "index.html#project",
    "href": "index.html#project",
    "title": "Soil Organic Carbon map of Cote d’Ivoire",
    "section": "Project",
    "text": "Project\nt4_soc_map includes:\n\nAnalyse of the data with associated documentation and figures:\n\nReproducible analyses in files.qmd\nResulting pages in docs/\nDocument structure definition in _quarto.yml\n\nData in data/\nR scripts with functions in r/\nIntermediary files in outputs/\nFigures in figures/\nR environment definition with renv in renv/ and renv/lock\nGit and GitHub files (.gitignore , .github/)\nProject documentation (README.qmd , README.md , LICENSE)",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "index.html#help",
    "href": "index.html#help",
    "title": "Soil Organic Carbon map of Cote d’Ivoire",
    "section": "Help",
    "text": "Help\nPlease preferentially create an issue on GitHub for any questions, bugs or help needed regarding t4_soc_map: https://github.com/cpiponiot/t4s_soc_map/issues. However, you can contact us by email through people in the core group (see below).",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "index.html#core-group",
    "href": "index.html#core-group",
    "title": "Soil Organic Carbon map of Cote d’Ivoire",
    "section": "Core group",
    "text": "Core group\n\nBienvenu H. K. Amani (bienvenuh.amani@gmail.com)\nCamille Piponiot (camille.piponiot-laroche@cirad.fr)\nBlandine Ahou Koffi\nEvans Ehouman\nClovis Grinand\nBeatriz Bellon\nLarissa Houphouet\nBruno Herault",
    "crumbs": [
      "Introduction"
    ]
  },
  {
    "objectID": "41_variable_selection.html",
    "href": "41_variable_selection.html",
    "title": "RF with variable selection",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(usdm)\nlibrary(CAST)\nlibrary(knitr)\nlibrary(randomForest)\n\n\nThis method was inspired by the work from Traoré et al. (2024).\n\nEnvironmental variables were grouped as: climate - temperature / climate - precipitation / soil - physical variables / soil - chemical variables.\nFor each group, a first variable selection was done to avoid collinearity, by applying a using a Variance Inflation Factor (VIF) threshold of &lt; 5 with a stepwise procedure (Naimi et al. 2014).\nA second variable selection step is then performed for each group of variables using a foward feature selection (FFS) procedure (Meyer et al. 2025).\nAll selected variables are then grouped, and the VIF + FFS are applied to this subset of variables.\nThe RandomForest model is then calibrated with the final subset of variables.\n\n\n\nCode\nvif_select &lt;- function(vars, data, select = NULL, thres = 5) {\n  if (is.null(select)) select &lt;- rep(TRUE, length(vars))\n  vif_res &lt;- data[, vars[select]] |&gt; vifstep(th = thres)\n  return(vars %in% vif_res@results$Variables)\n}\n\nffs_select &lt;- function(vars, data, select = NULL, response = \"T_stock\") {\n  if (is.null(select)) select &lt;- rep(TRUE, length(vars))\n  ffsel &lt;-  data[, vars[select]] |&gt; \n    ffs(data[, response], metric = \"Rsquared\") #, importance = TRUE, seed = 1000\n  # get list of predictor\n  return(vars %in% ffsel$selectedvars)\n}\n\ndata_all &lt;- read.csv(\"data/cache/data_stocks.csv\") %&gt;% \n  merge(read.csv(\"data/cache/climate_data.csv\")) %&gt;% \n  merge(read.csv(\"data/cache/soilgrids_data.csv\")) %&gt;% \n  drop_na() \n\n# create groups\ndata_groups &lt;- data.frame(\n  variable = grep(\"bio|cm\", colnames(data_all), value = TRUE)\n) |&gt; \n  mutate(group = ifelse(variable %in% paste0(\"bio\", 1:11), \"clim-temp\", NA)) |&gt; \n  mutate(group = ifelse(variable %in% paste0(\"bio\", 12:19), \"clim-prec\", group)) |&gt; \n  mutate(group = ifelse(grepl(\"cec|nitrogen|phh2o\", variable), \"soil-chem\", group)) |&gt;\n  mutate(group = ifelse(grepl(\"bdod|cfvo|clay|sand|silt\", variable), \"soil-phys\", group)) |&gt; \n  group_by(group) |&gt; \n  # vif selection by group, based on variables selected at previous stage\n  mutate(vif1 = vif_select(variable, data_all)) |&gt; \n  # ffs by group, based on variables selected at previous stage\n  mutate(ffs1 = ffs_select(variable, data_all, vif1)) |&gt; \n  ungroup() |&gt; \n  # vif selection for all, based on variables selected at previous stage\n  mutate(vif2 = vif_select(variable, data_all, ffs1)) |&gt; \n  # ffs for all, based on variables selected at previous stage\n  mutate(ffs2 = ffs_select(variable, data_all, vif2))\n\nwrite.csv(data_groups, file = \"data/cache/var_selection.csv\", row.names = FALSE)\n\n\nThe following variables were selected for each group at the different steps:\n\n\nCode\nread.csv(\"data/cache/var_selection.csv\") |&gt; \n  pivot_longer(cols = paste0(rep(c(\"vif\", \"ffs\")), rep(1:2, each = 2))) |&gt; \n  group_by(group, name) |&gt; \n  summarise(vars = paste(variable[value], collapse = \", \")) |&gt; \n  pivot_wider(values_from = \"vars\") |&gt; \n  relocate(group, vif1, ffs1, vif2, ffs2) |&gt; \n  kable(col.names = c(\"Groups\", paste(rep(c(\"VIF\", \"FFS\")), \n                                      rep(c(\"group\", \"all\"), each = 2), \n                                      sep = \"_\")))\n\n\n\n\n\n\n\n\n\n\n\n\nGroups\nVIF_group\nFFS_group\nVIF_all\nFFS_all\n\n\n\n\nclim-prec\nbio14, bio15, bio18, bio19\nbio14, bio15, bio18, bio19\nbio18, bio19\nbio18\n\n\nclim-temp\nbio11, bio3, bio5, bio8, bio9\nbio11, bio3, bio5, bio8, bio9\nbio3, bio5, bio9\nbio3\n\n\nsoil-chem\ncec_0.5cm, nitrogen_0.5cm, phh2o_0.5cm\ncec_0.5cm, nitrogen_0.5cm, phh2o_0.5cm\ncec_0.5cm, nitrogen_0.5cm\n\n\n\nsoil-phys\nbdod_0.5cm, cfvo_0.5cm, clay_0.5cm, silt_0.5cm\nbdod_0.5cm, cfvo_0.5cm, clay_0.5cm, silt_0.5cm\nbdod_0.5cm, cfvo_0.5cm, clay_0.5cm, silt_0.5cm\nbdod_0.5cm, silt_0.5cm\n\n\n\n\n\n\nResults of the RF model\nWe first partition the data by site, keeping 20% of sites for validation.\n\n\nCode\ndata &lt;- read.csv(\"data/cache/data_stocks.csv\") %&gt;% \n  merge(read.csv(\"data/cache/climate_data.csv\")) %&gt;% \n  merge(read.csv(\"data/cache/soilgrids_data.csv\")) %&gt;% \n  drop_na() \n\n# partition data in train/validation\n# randomly select 20% of sites for validation\nvalidation_sites &lt;- data %&gt;%\n  group_by(site) %&gt;%\n  summarise(type = c(\"cal\", \"val\")[1+rbinom(1, 1, 0.2)])\n\ndata &lt;- data %&gt;%\n  merge(validation_sites)\n\n\nWe only keep the explanatory variables selected (as described above).\n\n\nCode\ndata_groups &lt;- read.csv(\"data/cache/var_selection.csv\")\n\nrf_sel &lt;- data |&gt; \n  select(data_groups$variable[data_groups$ffs2]) |&gt; \n  randomForest(\n    data$T_stock,\n    subset = (data$type == \"cal\"),\n    ntree=500,\n    importance=TRUE\n  )\n\n\nThe importance of each selected variable in the final model is represented below.\n\n\nCode\nimportance_sel &lt;- importance(rf_sel, type=1) |&gt; \n  as.data.frame()\nimportance_sel$variable &lt;- rownames(importance_sel)\n\nimportance_sel |&gt; \n  merge(data_groups) |&gt; \n  ggplot(aes(x = reorder(variable, `%IncMSE`), y = `%IncMSE`, fill = group)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  xlab(\"Variables\") +\n  ylab(\"Increase in OOB Measn Square Error (%)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nMeyer, Hanna, Carles Milà, Marvin Ludwig, Jan Linnenbrink, and Fabian Schumacher. 2025. CAST: ’Caret’ Applications for Spatial-Temporal Models. https://github.com/HannaMeyer/CAST.\n\n\nNaimi, Babak, Nicholas a.s. Hamm, Thomas A. Groen, Andrew K. Skidmore, and Albertus G. Toxopeus. 2014. “Where Is Positional Uncertainty a Problem for Species Distribution Modelling.” Ecography 37: 191–203. https://doi.org/10.1111/j.1600-0587.2013.00205.x.\n\n\nTraoré, Soulemane, Irie Casimir Zo-Bi, Camille Piponiot, Raphaël Aussenac, and Bruno Hérault. 2024. “Fragmentation is the main driver of residual forest aboveground biomass in West African low forest-high deforestation landscapes.” Trees, Forests and People 15 (March): 100477. https://doi.org/10.1016/j.tfp.2023.100477.",
    "crumbs": [
      "RandomForest model",
      "RF with variable selection"
    ]
  },
  {
    "objectID": "41_variable_selection.html#based-on-forward-feature-selection-ffs",
    "href": "41_variable_selection.html#based-on-forward-feature-selection-ffs",
    "title": "Variable selection",
    "section": "Based on Forward Feature Selection (FFS)",
    "text": "Based on Forward Feature Selection (FFS)\nThe Forward Feature Selection (FFS) method, applied via the ffs function, is a variable selection technique used in machine learning and statistics to identify the subsets of variables (features) most relevant to the construction of a predictive model.\nHow Forward Feature Selection (FFS) works:\n\nInitialization: The method starts with a simple model, generally without any explanatory variables (or with only the constant in the case of regression).\nProgressive addition of variables: At each iteration, the method examines the addition of each variable not yet selected to the current model. The variable that most improves model performance, according to a specific criterion (e.g. increasing R², reducing mean squared error, etc.), is added to the model.\nValidation : Model performance is often validated at each stage using a cross-validation technique to avoid overlearning (overfitting).\nStop criterion: The process continues until there is no further significant improvement in model performance by adding new variables. A performance threshold can be predefined to determine when to stop adding variables.\nFinal result: At the end of the process, the model retains the variables that have been selected over the iterations as the most important for prediction.",
    "crumbs": [
      "RandomForest model",
      "Variable selection"
    ]
  },
  {
    "objectID": "43_rf_model_calibration.html",
    "href": "43_rf_model_calibration.html",
    "title": "Random forest model",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(randomForest)\nlibrary(usdm)\n\n\n\nPartition data by site\n\n\nCode\ndata &lt;- read.csv(\"data/cache/data_stocks.csv\") %&gt;% \n  merge(read.csv(\"data/cache/climate_data.csv\")) %&gt;% \n  merge(read.csv(\"data/cache/soilgrids_data.csv\")) \n\n# partition data in train/validation\n# randomly select 20% of sites for validation\nvalidation_sites &lt;- data %&gt;%\n  group_by(site) %&gt;%\n  summarise(type = c(\"cal\", \"val\")[1+rbinom(1, 1, 0.2)])\n\ndata &lt;- data %&gt;%\n  drop_na() %&gt;%\n  merge(validation_sites)\n\n\n\n\nAll variables\n\n\nCode\nrf_nosel &lt;- data |&gt; \n  select(!contains(\"plot\"), - site, -type, -lon, -lat, -T_stock) |&gt; \n  randomForest(\n    data$T_stock,\n    subset = (data$type == \"cal\"),\n    ntree=500,\n    importance=TRUE\n  )\n\n\n\n\nCode\nimportance_nosel &lt;- importance(rf_nosel, type=1) |&gt; \n  as.data.frame() |&gt; \n  arrange(`%IncMSE`)\nimportance_nosel$variable &lt;- rownames(importance_nosel)\n\nimportance_nosel |&gt; ggplot(\n    aes(x = variable, y = `%IncMSE`, fill = `%IncMSE`)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  xlab(\"Variables\") +\n  ylab(\"Increase in OOB Measn Square Error (%)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nOnly spatial variables - Prior variable selection based on VIF\n\n\nCode\nall_vif &lt;- data |&gt; \n   select(contains(\"bio\"), contains(\"cm\")) |&gt; \n  vifstep(th=10)\n\nrf_spat_vif &lt;- data |&gt; \n  select(all_vif@results$Variables) |&gt; \n  randomForest(\n    data$T_stock,\n    subset = (data$type == \"cal\"),\n    ntree=500,\n    importance=TRUE\n  )\n\n\n\n\nCode\nimportance_spat_vif &lt;- importance(rf_spat_vif, type=1) |&gt; \n  as.data.frame() |&gt; \n  arrange(`%IncMSE`)\nimportance_spat_vif$variable &lt;- rownames(importance_spat_vif)\n\nimportance_spat_vif |&gt; ggplot(\n    aes(x = variable, y = `%IncMSE`, fill = `%IncMSE`)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  xlab(\"Variables\") +\n  ylab(\"Mean decrease in accuracy (%)\") +\n  theme_minimal()",
    "crumbs": [
      "RandomForest model",
      "Random forest model"
    ]
  },
  {
    "objectID": "21_prepare_raw_data.html",
    "href": "21_prepare_raw_data.html",
    "title": "Open and prepare the raw dataset",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n\n\nCode\ndata_t4s &lt;- read.csv(\"data/soil_0.2.2.csv\") \nsummary(data_t4s)\n\n\n     site               plot               depth     sampleID        \n Length:2124        Length:2124        Min.   :1   Length:2124       \n Class :character   Class :character   1st Qu.:1   Class :character  \n Mode  :character   Mode  :character   Median :2   Mode  :character  \n                                       Mean   :2                     \n                                       3rd Qu.:3                     \n                                       Max.   :3                     \n                                                                     \n       C                N           bulk_density_g_cm3 coarse_fraction  \n Min.   :0.1020   Min.   :0.00000   Min.   :0.1148     Min.   :0.00000  \n 1st Qu.:0.6959   1st Qu.:0.06797   1st Qu.:1.3798     1st Qu.:0.01504  \n Median :1.0406   Median :0.09251   Median :1.5568     Median :0.14139  \n Mean   :1.2877   Mean   :0.11128   Mean   :1.5415     Mean   :0.21625  \n 3rd Qu.:1.6660   3rd Qu.:0.13784   3rd Qu.:1.7100     3rd Qu.:0.37532  \n Max.   :6.6624   Max.   :0.67775   Max.   :2.6440     Max.   :0.87309  \n                                    NA's   :24         NA's   :3        \n fine_fraction   \n Min.   :0.1269  \n 1st Qu.:0.6247  \n Median :0.8586  \n Mean   :0.7838  \n 3rd Qu.:0.9850  \n Max.   :1.0000  \n NA's   :3       \n\n\nSoil organic carbon stocks were estimated as\n\\[ stock = C \\cdot (\\Delta d \\cdot area) \\cdot fine \\cdot bd\\]\nwhere \\(C\\) is the soil organic carbon content, \\(\\Delta d\\) is the measurement depth (0.1 m), \\(area\\) is the standardisation area (1 ha = \\(10^4\\) m), \\(fine\\) is the fine fraction of the soil, and \\(bd\\) is the bulk density of the fine fraction (in Mg m\\(^3\\)).\n\n\nCode\ndata_t4s &lt;- data_t4s |&gt; \n  mutate(stock = C/100 * 1e3 * fine_fraction * bulk_density_g_cm3)\n\n\nWe then sum the carbon stocks over all depths at each site to get the total carbon stocks, and save the results.\n\n\nCode\nread.csv(\"data/plot_0.2.2.csv\") |&gt; \n  select(site, plot, lon, lat) |&gt; \n  merge(data_t4s) |&gt; \n  group_by(site, plot, lon, lat) |&gt; \n  summarise(T_stock = sum(stock), .groups = \"drop\") |&gt; \n  write.csv(\"data/cache/data_stocks.csv\", row.names = FALSE)",
    "crumbs": [
      "terri4sol soil database",
      "Open and prepare the raw dataset"
    ]
  },
  {
    "objectID": "22_check_errors.html",
    "href": "22_check_errors.html",
    "title": "Error checks",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(knitr)\n\n\nThe following sites have missing coordinates:\n\n\nCode\nread.csv(\"data/plot_0.2.2.csv\") |&gt; \n  subset(is.na(lon) | is.na(lat)) |&gt; \n  group_by(site) |&gt; \n  summarise(n()) |&gt; \n  kable(col.names = c(\"site\", \"number of plots\"))\n\n\n\n\n\nsite\nnumber of plots\n\n\n\n\nadzopeN\n9\n\n\ntene_oume\n1\n\n\n\n\n\nPlot information is missing in the following sites:\n\n\nCode\nread.csv(\"data/plot_0.2.2.csv\") |&gt; \n  subset(is.na(plot)) |&gt; \n  group_by(site) |&gt; \n  summarise(n()) |&gt; \n  kable(col.names = c(\"site\", \"number of plots\"))\n\n\n\n\n\nsite\nnumber of plots\n\n\n\n\nmebifon\n6\n\n\n\n\n\nPlot area varies as follows (in log-scale):\n\n\nCode\nread.csv(\"data/plot_0.2.2.csv\") |&gt; \n ggplot(aes(x = plot_area)) +\n  geom_histogram() +\n  labs(x = \"Plot area (ha)\") +\n  theme_classic() +\n  scale_x_log10()\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 209 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\nThe following plots have a plot area &gt; 5 ha:\n\n\nCode\nread.csv(\"data/plot_0.2.2.csv\") |&gt;\n subset(plot_area &gt; 5) |&gt; \n  select(site, plot, plot_area) |&gt; \n  unique()\n\n\n         site plot plot_area\n31        ble   15     7.000\n32        ble   16     9.000\n138 san_pedro    7     5.500\n142 san_pedro   11    10.000\n272 biankouma    1     5.160\n401   mebifon    2     6.600\n407   mebifon    8     7.130\n429   mebifon   30     6.545\n448   mebifon   49     5.534\n474   mebifon   75     5.288\n707 tene_oume    1    16.000\n708 tene_oume    2    16.000",
    "crumbs": [
      "terri4sol soil database",
      "Error checks"
    ]
  },
  {
    "objectID": "23_visualize_data.html",
    "href": "23_visualize_data.html",
    "title": "Soil dataset",
    "section": "",
    "text": "Site location\nCode\nloc_plots &lt;- read.csv(\"data/plot_0.2.2.csv\") |&gt; \n  select(site, plot, lat, lon) |&gt; \n  drop_na()\nleaflet() |&gt;\n  addProviderTiles(providers$Esri.WorldImagery) |&gt;\n  addMarkers(lng=loc_plots$lon, lat=loc_plots$lat, \n             label = paste(loc_plots$site, loc_plots$plot))",
    "crumbs": [
      "terri4sol soil database",
      "Soil dataset"
    ]
  },
  {
    "objectID": "23_visualize_data.html#dataset-size",
    "href": "23_visualize_data.html#dataset-size",
    "title": "Soil dataset",
    "section": "Dataset size",
    "text": "Dataset size\n\n\nCode\nread.csv(\"data/plot_0.2.2.csv\") |&gt; \n  group_by(site) |&gt; \n  summarise(n = n()) |&gt; \n  kable(col.names = c(\"Site\", \"Number of plots\"))\n\n\n\n\n\nSite\nNumber of plots\n\n\n\n\nadzope\n16\n\n\nadzopeN\n115\n\n\nagbo\n19\n\n\nagnibilekrou\n16\n\n\nazaguie\n16\n\n\nbadenou\n21\n\n\nbehiri\n87\n\n\nbiankouma\n16\n\n\nble\n16\n\n\nbonon\n16\n\n\nfoumbou\n20\n\n\nfresco\n16\n\n\ngrand_bereby\n16\n\n\ngueyo\n16\n\n\nguiberoua\n16\n\n\nguiglo\n16\n\n\nht_sassandra\n20\n\n\nirobo\n20\n\n\nmafere\n16\n\n\nmeagui\n16\n\n\nmebifon\n105\n\n\nniegre\n20\n\n\nsan_pedro\n16\n\n\nsoubre\n16\n\n\ntene\n19\n\n\ntene_oume\n8\n\n\nyaya\n20\n\n\n\n\n\nCode\nread.csv(\"data/plot_0.2.2.csv\") |&gt; \n  subset(!is.na(present_landuse)) |&gt; \n  group_by(present_landuse) |&gt; \n  summarise(n = n()) |&gt; \n  kable(col.names = c(\"Landuse\", \"Number of plots\"))\n\n\n\n\n\nLanduse\nNumber of plots\n\n\n\n\ncassava\n45\n\n\ncocoa\n227\n\n\nfallow\n191\n\n\nfood_crop\n16\n\n\nforest\n14\n\n\nforetanc\n30\n\n\njvc\n24\n\n\npalm\n8\n\n\nrubber\n32\n\n\ntrees plantation\n5",
    "crumbs": [
      "terri4sol soil database",
      "Soil dataset"
    ]
  },
  {
    "objectID": "23_visualize_data.html#distribution-of-soil-organic-carbon-stocks",
    "href": "23_visualize_data.html#distribution-of-soil-organic-carbon-stocks",
    "title": "Soil dataset",
    "section": "Distribution of soil organic carbon stocks",
    "text": "Distribution of soil organic carbon stocks\n\n\nCode\nread.csv(\"data/cache/data_stocks.csv\") |&gt; \n  ggplot(aes(x = T_stock)) + \n  geom_histogram() +\n  labs(x = expression(\"Soil organic carbon stocks [ Mg.\"*ha^-1*\" ]\")) +\n  theme_classic()\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 9 rows containing non-finite outside the scale range\n(`stat_bin()`).",
    "crumbs": [
      "terri4sol soil database",
      "Soil dataset"
    ]
  },
  {
    "objectID": "42_all_variables.html",
    "href": "42_all_variables.html",
    "title": "RF without variable selection",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(randomForest)\nlibrary(usdm)\n\n\nWe first randomly partition the data by site, keeping 20% of sites for validation.\n\n\nCode\ndata &lt;- read.csv(\"data/cache/data_stocks.csv\") %&gt;% \n  merge(read.csv(\"data/cache/climate_data.csv\")) %&gt;% \n  merge(read.csv(\"data/cache/soilgrids_data.csv\"))  %&gt;%\n  drop_na()\n\n# partition data in train/validation\n# randomly select 20% of sites for validation\nvalidation_sites &lt;- data %&gt;%\n  group_by(site) %&gt;%\n  summarise(type = c(\"cal\", \"val\")[1+rbinom(1, 1, 0.2)])\n\ndata &lt;- data %&gt;%\n  merge(validation_sites)\n\n\n\n\nCode\nrf_nosel &lt;- data |&gt; \n  select(!contains(\"plot\"), - site, -type, -lon, -lat, -T_stock) |&gt; \n  randomForest(\n    data$T_stock,\n    subset = (data$type == \"cal\"),\n    ntree=500,\n    importance=TRUE\n  )\n\n\nThe importance of all variables in the final model is represented below.\n\n\nCode\ndata_groups &lt;- read.csv(\"data/cache/var_selection.csv\")\n\nimportance_nosel &lt;- importance(rf_nosel, type=1) |&gt; \n  as.data.frame() \nimportance_nosel$variable &lt;- rownames(importance_nosel)\n\nimportance_nosel |&gt; \n  merge(data_groups) |&gt; \n  ggplot(aes(x = reorder(variable, `%IncMSE`), y = `%IncMSE`, fill = group)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  xlab(\"Variables\") +\n  ylab(\"Increase in OOB Measn Square Error (%)\") +\n  theme_minimal()",
    "crumbs": [
      "RandomForest model",
      "RF without variable selection"
    ]
  },
  {
    "objectID": "43_rf_comparison.html",
    "href": "43_rf_comparison.html",
    "title": "Comparison of Random forest models results",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(randomForest)\nlibrary(usdm)",
    "crumbs": [
      "RandomForest model",
      "Comparison of Random forest models results"
    ]
  },
  {
    "objectID": "44_predictions.html",
    "href": "44_predictions.html",
    "title": "SOC stocks prediction",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(randomForest)\nlibrary(usdm)\nlibrary(exactextractr)\n\n\nPredictors must be at the same resolution (here the coarsest resolution: 1 km).\n\n\nCode\nchelsa &lt;- \n  list.files(\"data/download/CHELSA\", pattern = \"tif$\", full.names = TRUE) |&gt; \n  rast()\nnames(chelsa) &lt;- list.files(\"data/download/CHELSA\", pattern = \"tif$\") |&gt; \n  gsub(pattern = \"CHELSA_|_1981-2010_V.2.1.tif\", replacement = \"\")\n\nsoilgrids &lt;- \n  list.files(\"data/download/ISRIC\", pattern = \"tif$\", full.names = TRUE) |&gt; \n  rast() |&gt; \n  project(\"EPSG: 4326\") |&gt; \n  lapply(function(x) exact_resample(x, chelsa[[1]], 'mean')) |&gt; \n  rast()\nnames(soilgrids) &lt;- list.files(\"data/download/ISRIC\", pattern = \"tif$\") |&gt; \n  gsub(pattern = \"_mean.tif\", replacement = \"\")\n\nas.data.frame(chelsa, xy = TRUE) |&gt; \n  inner_join(as.data.frame(soilgrids, xy = TRUE)) |&gt; \n  write.csv(\"data/cache/data_vars.csv\", row.names = FALSE)\n\n\n\n\nCode\ndata &lt;- read.csv(\"data/cache/data_stocks.csv\") %&gt;% \n  merge(read.csv(\"data/cache/climate_data.csv\")) %&gt;% \n  merge(read.csv(\"data/cache/soilgrids_data.csv\"))  %&gt;%\n  drop_na()\n\n# partition data in train/validation\n# randomly select 20% of sites for validation\nvalidation_sites &lt;- data %&gt;%\n  group_by(site) %&gt;%\n  summarise(type = c(\"cal\", \"val\")[1+rbinom(1, 1, 0.2)])\n\ndata &lt;- data %&gt;%\n  merge(validation_sites)\n\n\n\n\nCode\nrf_nosel &lt;- data |&gt; \n  select(!contains(\"plot\"), - site, -type, -lon, -lat, -T_stock) |&gt; \n  randomForest(\n    data$T_stock,\n    subset = (data$type == \"cal\"),\n    ntree=500,\n    importance=TRUE\n  )\n\n\n\n\nCode\ndata_vars &lt;- read.csv(\"data/cache/data_vars.csv\") |&gt; \n  drop_na()\ndata_vars$T_stock &lt;- predict(rf_nosel, data_vars)\n\nggplot(data_vars, aes(x, y, fill = T_stock)) +\n  geom_raster() +\n  coord_equal()+\n  labs(x = NULL, y = NULL) +\n  scale_fill_viridis_c(name = \"Stocks de C\\nprédits\\n(Mg/ha)\", option = \"D\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nCode\nggsave(\"D:/projets-cirad/terri4sol/presentations/carte_c_preds.png\")\n\n\nSaving 7 x 5 in image",
    "crumbs": [
      "RandomForest model",
      "SOC stocks prediction"
    ]
  },
  {
    "objectID": "33_tmf.html",
    "href": "33_tmf.html",
    "title": "TMF data",
    "section": "",
    "text": "Code\nlibrary(terra)\nlibrary(sf)\nlibrary(tidyverse)\nlibrary(tidyterra)\n\n\nWe used data from the Tropical Moist Forests (TMF) product, which is based on Landsat images (Vancutsem et al. 2021), to estimate the time since deforestation and the age of secondary forests. These classify tropical areas annually as follows: (i) undisturbed forests, (ii) disturbed forests, (iii) deforested areas, (iv) regrowing forests, (v) water, and (vi) other.\nWe estimated the age of secondary forests in 2022 as the number of years a pixel of regrowing forest in 2022 had continuously been classified as such. We estimated the time since deforestation as the time since a pixel that was classified as undisturbed or disturbed forest in 1990 (i.e. the first year of the TMF time series) had changed to another class.\n\n\nCode\n# South Cote d'Ivoire (\"zone forestiere\") area\narea &lt;- st_read(\"data/rci_south.shp\") |&gt; st_transform(4326)\n# download tmf annual change for Cote d'Ivoire\nif (!dir.exists(\"data/download/TMF\")) dir.create(\"data/download/TMF\")\nfor (yr in 1990:2024) {\n  file &lt;- paste0(\n    \"data/download/TMF/JRC_TMF_AnnualChange_v1_\", yr,\n    \"_AFR_ID52_N10_W10.tif\"\n  )\n  if (!file.exists(file)) {\n    paste0(\n      \"https://ies-ows.jrc.ec.europa.eu/iforce/tmf_v1/download.py?\",\n      \"type=tile&dataset=AnnualChange_\", yr, \"&lat=N10&lon=W10\"\n    ) |&gt;\n      download.file(file, mode = \"wb\")\n  }\n  crop_file &lt;- paste0(\"data/download/TMF/JRC_TMF_AnnualChange_v1_\", yr, \"_RCI.tif\")\n  if (!file.exists(crop_file)) {\n    rast(file)|&gt; crop(ext(area)) |&gt; writeRaster(crop_file)\n  }\n}\ntmf &lt;- list.files(\"data/download/TMF\", \"RCI\", full.names = TRUE) |&gt; \n  grep(pattern = paste(seq(1990, 2022), collapse = \"|\"), value = TRUE) |&gt;\n  rast()\nif (!dir.exists(\"data/cache/tiles\")) dir.create(\"data/cache/tiles\")\n# create 25 smaller raster stacks\nmakeTiles(tmf, 2000, filename=\"data/cache/tiles/tmf_.tif\")\n\nfor (fl in list.files(\"data/cache/tiles\", \"tmf\", full.names = TRUE)) {\n  if (!file.exists(gsub(\"tmf\", \"tmf_sec\", fl)) | \n      !file.exists(gsub(\"tmf\", \"tmf_def\", fl))) {\n    r &lt;- rast(fl) \n    vals &lt;- values(r)\n  }\n  # age of secondary forests in 2022\n  if (!file.exists(gsub(\"tmf\", \"tmf_sec\", fl))) {\n    ind &lt;- which(vals[,33] == 4)\n    age_sec &lt;- vals[ind,] |&gt; \n      apply(1, function(x) {\n        if (any(!is.na(x) & x != 4))\n          length(x) - max(which(x != 4))\n        else NA })\n    vals_sec &lt;- rep(NA, nrow(vals))\n    vals_sec[ind] &lt;- age_sec\n    r_sec &lt;- rast(matrix(vals_sec, nrow=nrow(r), ncol=ncol(r), byrow = TRUE), \n                  extent = ext(r), crs = crs(r))\n    writeRaster(r_sec, gsub(\"tmf\", \"tmf_sec\", fl))\n  }\n  # deforestation age in 2022\n  if (!file.exists(gsub(\"tmf\", \"tmf_def\", fl))) {\n    ind &lt;- which(vals[,1] %in% c(1,2))\n    age_def &lt;- vals[ind,] |&gt; \n      apply(1, function(x) {\n        if (any(!is.na(x) & x &gt; 2)) \n          sum(!is.na(x) & x &gt; 2)\n        else NA})\n    vals_def &lt;- rep(NA, nrow(vals))\n    vals_def[ind] &lt;- age_def\n    r_def &lt;- rast(matrix(vals_def, nrow=nrow(r), ncol=ncol(r), byrow = TRUE), \n                  extent = ext(r), crs = crs(r))\n    writeRaster(r_def, gsub(\"tmf\", \"tmf_def\", fl))\n  }\n}\nlist.files(\"data/cache/tiles\", \"sec\", full.names = TRUE) |&gt;\n  lapply(rast) |&gt; \n  sprc() |&gt; \n  mosaic() |&gt;\n  writeRaster(\"data/cache/tmf_sec_age.tif\", overwrite = TRUE)\nlist.files(\"data/cache/tiles\", \"def\", full.names = TRUE) |&gt;\n  lapply(rast) |&gt; \n  sprc() |&gt; \n  mosaic() |&gt;\n  writeRaster(\"data/cache/tmf_def_age.tif\", overwrite = TRUE)\n# remove tiles to save space\nlist.files(\"data/cache/tiles\", full.names = TRUE) |&gt; file.remove()\n\n\n\n\nCode\nggplot() +\n  geom_spatraster(data = rast(\"data/cache/tmf_sec_age.tif\")) +\n  scale_fill_viridis_c(na.value = \"transparent\") +\n  geom_sf(data = area, fill = NA, col = \"black\") +\n  labs(title = \"Age of secondary forests in 2022\", fill = \"Age (yr)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot() +\n  geom_spatraster(data = rast(\"data/cache/tmf_def_age.tif\")) +\n  scale_fill_viridis_c(na.value = \"transparent\") +\n  geom_sf(data = area, fill = NA, col = \"black\") +\n  labs(title = \"Time since deforestation\", fill = \"Time (yr)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nVancutsem, Christelle, Frédéric Achard, J-F Pekel, Ghislain Vieilledent, Silvia Carboni, Dario Simonetti, Javier Gallego, Luiz EOC Aragao, and Robert Nasi. 2021. “Long-Term (1990–2019) Monitoring of Forest Cover Changes in the Humid Tropics.” Science Advances 7 (10): eabe1603.",
    "crumbs": [
      "Ancillary data",
      "TMF data"
    ]
  }
]