```{r setup}
#| message: false
#| warning: false

library(tidyverse)
library(randomForest)
library(usdm)
library(exactextractr)
```

# SOC stocks prediction {.unnumbered}

Predictors must be at the same resolution (here the coarsest resolution: 1 km).

```{r}
#| message: false
#| warning: false
#| eval: false
chelsa <- list.files("data/download/CHELSA", pattern = "tif$", full.names = TRUE) |> 
  rast()
names(chelsa) <- list.files("data/download/CHELSA", pattern = "tif$") |> 
  gsub(pattern = "CHELSA_|_1981-2010_V.2.1.tif", replacement = "")
soilgrids <- 
  list.files("data/download/ISRIC", pattern = "tif$", full.names = TRUE) |> 
  rast() |> 
  project("EPSG: 4326")
names(soilgrids) <- list.files("data/download/ISRIC", pattern = "tif$") |> 
  gsub(pattern = "_mean.tif", replacement = "")
topography <- list.files("data/download/SRTM/", pattern = "tif$", full.names = TRUE) |> 
  rast() |>
  project("EPSG: 4326")
landcover <- list.files("data/download/BNEDT/", pattern = "tif$", full.names = TRUE) |> 
  rast() |>
  project("EPSG: 4326")
# resample to finest resolution - topography
# for now: use coarsest resolution (chelsa)
topography <- topography |> 
  lapply(function(x) exact_resample(x, chelsa[[1]], 'mean')) |> 
  rast()
names(topography) <- list.files("data/download/SRTM", pattern = "tif$", full.names = TRUE) |> 
  rast() |> names()
soilgrids <- soilgrids |> 
  lapply(function(x) exact_resample(x, chelsa[[1]], 'mean')) |> 
  rast()
names(soilgrids) <- list.files("data/download/ISRIC", pattern = "tif$") |> 
  gsub(pattern = "_mean.tif", replacement = "")
landcover <- landcover |> 
  lapply(function(x) exact_resample(x, chelsa[[1]], 'mean')) |> 
  rast()
names(landcover) <- "landuse"
as.data.frame(chelsa, xy = TRUE) |> 
  inner_join(as.data.frame(soilgrids, xy = TRUE)) |> 
  inner_join(as.data.frame(topography, xy = TRUE)) |> 
  inner_join(as.data.frame(landcover, xy = TRUE)) |> 
  write.csv("data/cache/data_vars.csv", row.names = FALSE)
```

```{r}
#| message: false
#| warning: false
data_vars <- read.csv("data/cache/data_vars.csv") |> 
  drop_na()
load("data/cache/models/rf_all.rda")
data_vars$T_stock <- predict(rf_all, data_vars)

ggplot(data_vars, aes(x, y, fill = T_stock)) +
  geom_raster() +
  coord_equal()+
  labs(x = NULL, y = NULL) +
  scale_fill_viridis_c(name = "Stocks de C\nprÃ©dits\n(Mg/ha)", option = "D") +
  theme_minimal()
ggsave("D:/projets-cirad/terri4sol/presentations/carte_c_preds.png")
```
