```{r setup}
#| message: false
#| warning: false
#| echo: false
#| results: 'hide'
library(tidyverse)
library(randomForest)
library(usdm)
library(exactextractr)
library(quantregForest)
list.files("r", pattern = "\\.R", full.names = TRUE) |> lapply(source)
```

# SOC stocks prediction {.unnumbered}

Predictors must be at the same resolution (here the coarsest resolution: 1 km).

```{r}
#| message: false
#| warning: false
#| eval: false
chelsa <- list.files("data/download/CHELSA", pattern = "tif$", full.names = TRUE) |> 
  rast()
names(chelsa) <- list.files("data/download/CHELSA", pattern = "tif$") |> 
  gsub(pattern = "CHELSA_|_1981-2010_V.2.1.tif", replacement = "")
soilgrids <- 
  list.files("data/download/ISRIC", pattern = "tif$", full.names = TRUE) |> 
  rast() |> 
  project("EPSG: 4326")
names(soilgrids) <- list.files("data/download/ISRIC", pattern = "tif$") |> 
  gsub(pattern = "_mean.tif", replacement = "") |> 
  gsub(pattern = "-", replacement = ".")
topography <- list.files("data/download/SRTM/", pattern = "tif$", full.names = TRUE) |> 
  rast() |>
  project("EPSG: 4326")
landcover <- list.files("data/download/BNEDT/", pattern = "tif$", full.names = TRUE) |> 
  rast() |> 
  project("EPSG: 4326")
levels(landcover) <- read.csv("data/download/BNEDT/legend_bnedt.csv") |> 
  select(value, label) |> rename(landuse = label)
# resample to finest resolution - topography
# for now: use coarsest resolution (chelsa)
topography <- topography |> 
  lapply(function(x) exact_resample(x, chelsa[[1]], 'mean')) |> 
  rast()
names(topography) <- list.files("data/download/SRTM", pattern = "tif$", full.names = TRUE) |> 
  rast() |> names()
soilgrids <- soilgrids |> 
  lapply(function(x) exact_resample(x, chelsa[[1]], 'mean')) |> 
  rast()
names(soilgrids) <- list.files("data/download/ISRIC", pattern = "tif$") |> 
  gsub(pattern = "_mean.tif", replacement = "")
landcover <- landcover |> 
  lapply(function(x) exact_resample(x, chelsa[[1]], 'mode')) |> 
  rast()
names(landcover) <- "landuse"
data_vars <- as.data.frame(chelsa, xy = TRUE) |> 
  inner_join(as.data.frame(soilgrids, xy = TRUE)) |> 
  inner_join(as.data.frame(topography, xy = TRUE)) |> 
  inner_join(as.data.frame(landcover, xy = TRUE)) |> 
  inner_join(read.csv("data/download/BNEDT/legend_bnedt.csv"), by = join_by(landuse == value)) |> 
  mutate(landuse = NULL, color = NULL) |> rename(landuse = label) 
# model prediction
load("data/cache/models/qrf_final.rda")
predict.qrf_llo(
  qrf_final,
  parallel = FALSE,
  newdata = select(drop_na(data_vars), -x, -y)
) |> 
  bind_cols(select(drop_na(data_vars), x, y)) |> 
  right_join(data_vars) |>
  write.csv("data/cache/data_vars.csv", row.names = FALSE)
```

```{r}
#| message: false
#| warning: false
read.csv("data/cache/data_vars.csv") |>
  select(x, y, contains("Q")) |> 
  pivot_longer(cols = contains("Q")) |> 
  ggplot(aes(x, y, fill = value)) +
  geom_raster() +
  coord_equal() +
  labs(x = NULL, y = NULL) +
  facet_wrap(~name) + 
  scale_fill_viridis_c(name = "Stocks de C\npr√©dits\n(Mg/ha)", option = "D") +
  theme_minimal()
```
